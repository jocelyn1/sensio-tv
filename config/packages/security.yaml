security:
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    encoders:
        App\Entity\User: auto
        App\Entity\Admin:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_provider:
            entity:
                class: App\Entity\User
                property: email

        backend_users_provider:
            entity:
                class: App\Entity\Admin
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|assets)/
            security: false

        main:
            pattern: ^/
            anonymous: true
            lazy: true
            provider: users_provider
#            switch_user: true  # https://symfony.com/doc/current/security/impersonating_user.html
            guard:
                authenticators:
                    - App\Security\Guard\FormLoginAuthenticator
            logout:
                path: app_security_logout

#        admin:
#            pattern: ^/admin
#            anonymous: true
#            lazy: true
#            provider: backend_users_provider
#            guard:
#                authenticators:
#                    - App\Security\Guard\AdminFormLoginAuthenticator
#            logout:
#                path: app_admin_security_logout

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: !php/const App\Security\Voter\AddMovieToCartVoter::CAN }
